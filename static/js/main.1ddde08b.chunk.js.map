{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","showDate","Date","getFullYear","Footer","Note","props","className","title","content","id","onClick","hd","CreateArea","onChange","event","foc","value","fv","name","placeholder","toc","tv","rows","type","hab","App","useState","userTyped","setUserTyped","titleNote","setTitleNote","contentNote","setContentNote","handleTitleChange","e","utValue","target","utFieldName","prevVal","handleDeleteButton","filter","item","index","trim","prevValz1","prevValz2","alert","map","info","ReactDOM","render","document","getElementById"],"mappings":"kKAUeA,MARf,WACI,OACI,iCACI,2CCFNC,GADO,IAAIC,MACKC,cAUPC,MARf,WACE,OACE,iCACE,kDAAgBH,QCMPI,MAZf,SAAcC,GACZ,OACE,sBAAKC,UAAU,OAAf,UACE,6BAAKD,EAAME,QACX,4BAAIF,EAAMG,QAAQH,EAAMI,MACxB,wBAAQC,QAAS,WACXL,EAAMM,GAAGN,EAAMI,KADrB,wBCyBSG,MA9Bf,SAAoBP,GAClB,OACE,8BACE,iCACE,uBACEQ,SAAU,SAACC,GACTT,EAAMU,IAAID,IAEZE,MAAOX,EAAMY,GACbC,KAAK,QACLC,YAAY,UAEd,0BACEN,SAAU,SAACC,GACTT,EAAMe,IAAIN,IAEZE,MAAOX,EAAMgB,GACbH,KAAK,UACLC,YAAY,iBACZG,KAAK,MAEP,wBAAQC,KAAK,SAASb,QAAS,WAC7BL,EAAMmB,OADR,uBC2FOC,MA3Gf,WAAe,MAEmBC,mBAAS,CACvCnB,MAAO,GACPC,QAAS,KAJE,mBAERmB,EAFQ,KAEGC,EAFH,OAOmBF,mBAAS,IAP5B,mBAORG,EAPQ,KAOGC,EAPH,OASuBJ,mBAAS,IAThC,mBASRK,EATQ,KASKC,EATL,KAoDb,SAASC,EAAkBC,GACzB,IAAIC,EAAUD,EAAEE,OAAOpB,MACnBqB,EAAcH,EAAEE,OAAOlB,KAC3BU,GAAa,SAACU,GACZ,OAAO,2BACFA,GADL,kBAEGD,EAAcF,OAQrB,SAASI,EAAmB9B,GAC1BqB,GAAa,SAACQ,GACZ,OAAOA,EAAQE,QAAO,SAACC,EAAMC,GAC3B,OAAOA,IAAUjC,QAGrBuB,GAAe,SAACM,GACd,OAAOA,EAAQE,QAAO,SAACC,EAAMC,GAC3B,OAAOA,IAAUjC,QAKvB,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEQ,GAAIU,EAAUpB,MACdQ,IAAKkB,EACLZ,GAAIM,EAAUnB,QACdY,IAAKa,EACLT,IAzEN,WACiC,qBAApBG,EAAUpB,OAAsD,qBAAtBoB,EAAUnB,SAC9B,KAA3BmB,EAAUpB,MAAMoC,QAA8C,KAA7BhB,EAAUnB,QAAQmC,QACrDb,GAAa,SAACc,GACZ,MAAM,GAAN,mBAAWA,GAAX,CAAsBjB,EAAUpB,WAElCyB,GAAe,SAACa,GACd,MAAM,GAAN,mBAAWA,GAAX,CAAsBlB,EAAUnB,aAElCoB,GAAa,WACX,MAAO,CACLrB,MAAO,GACPC,QAAS,QAOfsC,MAAM,kCAyDLjB,EAAUkB,KAAI,SAACC,EAAMN,GAAP,OACb,cAAC,EAAD,CAEEjC,GAAIiC,EACJnC,MAAOyC,EAIPxC,QAASuB,EACTpB,GAAI4B,GAPCG,MAUT,cAAC,EAAD,QCzGNO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1ddde08b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <h1>Keeper</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst date = new Date();\r\nconst showDate = date.getFullYear();\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <p>Copyright â“’ {showDate}</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction Note(props) {\r\n  return (\r\n    <div className=\"note\">\r\n      <h1>{props.title}</h1>\r\n      <p>{props.content[props.id]}</p>\r\n      <button onClick={() => {\r\n            props.hd(props.id);\r\n          }}>DELETE</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\n\r\nfunction CreateArea(props) {\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input\r\n          onChange={(event) => {\r\n            props.foc(event);\r\n          }}\r\n          value={props.fv}\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n        />\r\n        <textarea\r\n          onChange={(event) => {\r\n            props.toc(event);\r\n          }}\r\n          value={props.tv}\r\n          name=\"content\"\r\n          placeholder=\"Take a note...\"\r\n          rows=\"3\"\r\n        />\r\n        <button type=\"button\" onClick={() => {\r\n          props.hab();\r\n        }} >Add</button>\r\n      </form>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default CreateArea;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Note from \"./Note\";\r\nimport CreateArea from \"./CreateArea\"\r\n\r\n\r\nfunction App() {\r\n  //state1 for control on user text while creating note\r\n  var [userTyped, setUserTyped] = useState({\r\n    title: \"\",\r\n    content: \"\"\r\n  });\r\n  //state2 for saving user titles in array\r\n  var [titleNote, setTitleNote] = useState([]);\r\n  //state3 for saving user content in array\r\n  var [contentNote, setContentNote] = useState([]);\r\n\r\n  // upon user click on add button\r\n  // content ffrom state 1 is transfered to \r\n  // state 2 and state 3 \r\n  function handleAddButton() {\r\n    if (typeof userTyped.title !== \"undefined\" && typeof userTyped.content !== \"undefined\") {\r\n      if (userTyped.title.trim() !== \"\" && userTyped.content.trim() !== \"\") {\r\n        setTitleNote((prevValz1) => {\r\n          return [...prevValz1, userTyped.title]\r\n        });\r\n        setContentNote((prevValz2) => {\r\n          return [...prevValz2, userTyped.content]\r\n        });\r\n        setUserTyped(() => {\r\n          return {\r\n            title: \"\",\r\n            content: \"\"\r\n          }\r\n        });\r\n      }else{\r\n        alert(\"title and content required!\")\r\n      }\r\n    }else{\r\n      alert(\"title and content required!\")\r\n    }\r\n\r\n    // setTitleNote((prevValz1) => {\r\n    //   return [...prevValz1, userTyped.title]\r\n    // });\r\n    // setContentNote((prevValz2) => {\r\n    //   return [...prevValz2, userTyped.content]\r\n    // });\r\n    //resets the create note field upon add click\r\n    // setUserTyped(() => {\r\n    //   return {\r\n    //     title: \"\",\r\n    //     content: \"\"\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  //maintains the state of state 1\r\n  function handleTitleChange(e) {\r\n    var utValue = e.target.value;\r\n    var utFieldName = e.target.name;\r\n    setUserTyped((prevVal) => {\r\n      return {\r\n        ...prevVal,\r\n        [utFieldName]: utValue\r\n      }\r\n    })\r\n  }\r\n\r\n  //upon delete click\r\n  //gets the id of deleted note\r\n  //deletes the content correspondind the id form state 2 & 3\r\n  function handleDeleteButton(id){\r\n    setTitleNote((prevVal)=>{\r\n      return prevVal.filter((item, index)=>{\r\n        return index !== id;\r\n      })\r\n    })\r\n    setContentNote((prevVal)=>{\r\n      return prevVal.filter((item, index)=>{\r\n        return index !== id;\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <CreateArea\r\n        fv={userTyped.title}\r\n        foc={handleTitleChange}\r\n        tv={userTyped.content}\r\n        toc={handleTitleChange}\r\n        hab={handleAddButton}\r\n      />\r\n      {/* <Note key={1} title=\"Note title\" content=\"Note content\" /> */}\r\n      {titleNote.map((info, index) => (\r\n        <Note\r\n          key={index}\r\n          id={index}\r\n          title={info}\r\n          //since 2 arrays are present\r\n          //the contents of array 2 are handled inside the note\r\n          //as per the id passed\r\n          content={contentNote}\r\n          hd={handleDeleteButton}\r\n        />\r\n      ))}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}